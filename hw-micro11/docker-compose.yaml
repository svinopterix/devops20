volumes:
  data:
  prometheus-data:
  grafana_data:

services:
  # S3 minio
  storage:
    image: minio/minio:latest
    command: server /data
    restart: always
    expose: 
      - 9000
    environment:
      MINIO_ROOT_USER: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${Storage_Secret:-STORAGE_SECRET_KEY}
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - storage
    restart: on-failure
    entrypoint: > 
      /bin/sh -c "      
      /usr/bin/mc config host add storage http://storage:9000 ${Storage_AccessKey-STORAGE_ACCESS_KEY} ${Storage_Secret-STORAGE_SECRET_KEY} &&
      /usr/bin/mc mb --ignore-existing storage/${Storage_Bucket:-data} &&
      /usr/bin/mc anonymous set download storage/${Storage_Bucket:-data} &&
      exit 0;
      "

  # uploader
  uploader:
    build: ./uploader
    depends_on:
      - storage
      - createbuckets
    expose: 
      - 3000
    environment:
      PORT: 3000
      S3_HOST: storage
      S3_PORT: 9000
      S3_ACCESS_KEY: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      S3_ACCESS_SECRET: ${Storage_Secret:-STORAGE_SECRET_KEY}
      S3_BUCKET: ${Storage_Bucket:-data}
  
  # authenticator
  security:
    build: ./security
    expose: 
      - 3000
    environment:
      PORT: 3000

  # gateway
  gateway:
    image: nginx:alpine
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - storage
      - uploader
      - security

  # prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped
    ports:
      - "9090:9000"
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  # grafana
  graphana:
    image: grafana/grafana
    container_name: graphana
    ports: 
      - "8081:3000"
    depends_on:
      - prometheus      
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=qwerty123456
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

  # elasticsearch
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data      
    ports:
      - 9200:9200
  
  # kibana
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - 8082:5601

volumes:
  prom_data:
  data:
  elasticsearch_data:
